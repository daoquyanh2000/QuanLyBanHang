@model QuanLyBanHang.DB.Entities.Product

@{
    ViewBag.Title = "Edit";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}

<h2>Sửa</h2>


@using (Html.BeginForm("Edit", "Products", null, FormMethod.Post, new { enctype = "multipart/form-data" }))

{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Sản phẩm</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Code, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Code, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Code, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Status, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Discount, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Discount, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Discount, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ProductTypeId, "ProductTypeId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("ProductTypeId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ProductTypeId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SupplierId, "SupplierId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("SupplierId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.SupplierId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Origin, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Origin, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Origin, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Info, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Info, new{ @class = "form-control" ,@rows="10",@cols="5"})
                @Html.ValidationMessageFor(model => model.Info, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="input-group mb-3">
            <label class="input-group-text" for="inputImage" id="inputImageLabel">Tải ảnh</label>
            <input type="file" name="file" class="form-control" id="inputImage" accept="image/png, image/gif, image/jpeg" multiple="multiple">
        </div>
        <div class="form-group">
            <div class="col-md-10">
                <table class="table" id="tableImage">
                    <thead>
                        <tr>
                            <th>
                                Tên ảnh
                            </th>
                            <th>
                                Ảnh
                            </th>
                            <th>
                                Chọn ảnh chính
                            </th>
                            <th>

                            </th>
                        </tr>
                    </thead>
                    @foreach (var item in Model.Images)
                    {
                        <tr>
                            <td>
                                @item.ImageName
                            </td>
                            <td>
                                <img src="@item.ImageUrl" alt="Alternate Text" style="width:100px" />
                            </td>
                            <td>
                                <input type="radio" name="SelectedImage" checked="@item.IsPrimary" data-id="@item.Id" class="changePrimaryImage">
                            </td>
                            <td>    <button type="button" class="btn btn-danger deleteItem" data-id="@item.Id">Xóa</button></td>
                        </tr>
                    }
                </table>
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Lưu" class="btn btn-primary" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Quay lại", "Index")

</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
<script>
    $('.deleteItem').click(function (e) {
           e.preventDefault();
           var $ctrl = $(this);
           if (confirm('Bạn có muốn xóa ảnh này?')) {
               $.ajax({
                   url: '@Url.Action("DeleteFile")',
                   type: 'POST',
                   data: { id: $(this).data('id') }
               }).done(function (data) {
                   if (data.Result == "OK") {
                       $ctrl.closest('tr').remove();
                   }
                   else if (data.Result.Message) {
                       alert(data.Result.Message);
                   }
               }).fail(function () {
                   alert("Có lỗi xảy ra, vui lòng thử lại!");
               })

           }
       });
</script>
<script>
    $('#inputImage').on('change', function(){
        files = $(this)[0].files;
        let formData = new FormData();
        formData.append("productId", $('#Id').val());

        for (file of files) {
            formData.append("FileImage", file)
        }
        $.ajax({
            type: 'POST',
            url: "/admin/products/UploadFile",
            data: formData,
            contentType: false,
            processData: false,
            success: function (res) {

                window.location.reload();
            },
            error: function (err) {
                console.log(err)
            }
        })
    })
</script>
<script>
    $('.changePrimaryImage').on('change', function () {
        $.ajax({
            url: "/admin/products/ChangePrimaryImage",
            data: {
                productId: $('#Id').val(),
                imageId: $(this).data('id')
            },
            type: "post",
            success: function (res) {

                window.location.reload();
            },
            error: function (err) {
                console.log(err)
            }
        })
    })
</script>