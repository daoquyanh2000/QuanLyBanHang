@model QuanLyBanHang.DB.Entities.Customer

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var list = (List<QuanLyBanHang.Models.CartItem>)Session["CartSession"];
}
@{ Html.RenderAction("SearchBar", "Home");}
<style>
    .cut-text {
        text-overflow: ellipsis;
        overflow: hidden;
        width: 200px;
        white-space: nowrap;
    }
</style>
<!-- Checkout Section Begin -->
<section class="checkout spad">
    <div class="container">
        <div class="row">
            <div class="col-lg-12">
                <h6>
                    <span class="icon_tag_alt"></span> Có mã giảm giá? <a href="#">Bấm vào đây</a> để nhập mã
                </h6>
            </div>
        </div>
        <div class="checkout__form">
            <h4>Thông tin khách hàng</h4>
            @using (Html.BeginForm())
            {

            }



        <form id="order-form">
            @Html.AntiForgeryToken()

            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="row">
                <div class="col-lg-8 col-md-6">
                    <div class="row">
                        <div class="col-lg-12">
                            <div class="checkout__input">
                                @Html.LabelFor(model => model.FullName, htmlAttributes: new { @class = "control-label col-md-2" })
                                @Html.EditorFor(model => model.FullName, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.FullName, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-lg-12">
                            <div class="checkout__input">
                                @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "control-label col-md-2" })
                                @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-lg-12">
                            <div class="checkout__input">
                                @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="col-lg-12">
                            <div class="checkout__input">
                                @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
                                @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-lg-4 col-md-6">
                    <div class="checkout__order">
                        <h4>Đơn hàng của bạn</h4>
                        <div class="checkout__order__products">Sản phẩm <span>Tổng tiền</span></div>
                        @if (list != null)
                        {
                            foreach (var item in list)
                            {
                                <div class="d-flex my-3">
                                    <div class="cut-text">
                                        @item.Product.Title
                                    </div>
                                    <div style="font-weight: 700;" class="ml-auto">
                                        @string.Format("{0:#,##0}", Convert.ToDecimal(item.Price * item.Quantity)) &#8363;
                                    </div>
                                </div>
                            }

                            <div class="checkout__order__total">
                                Tổng tiền <span>
                                    @string.Format("{0:#,##0}", Convert.ToDecimal(@list.Sum(x => x.Quantity * x.Price))) &#8363;
                                </span>
                            </div>
                        }
                        <button type="submit" id="btn-submit-form" class="site-btn">Đặt hàng</button>
                    </div>
                </div>
            </div>
        </form>
        </div>
    </div>
</section>

<script>
    $('#btn-submit-form').on('click', function (e) {
        e.preventDefault();
        let formData = new FormData();
        formData.append('FullName', $('#FullName').val());
        formData.append('Phone', $('#Phone').val());
        formData.append('Email', $('#Email').val());
        formData.append('Address', $('#Address').val());

        $.ajax({
            url: "/Checkout/index",
            data: formData,
            cache: false,
            contentType: false,
            processData: false,
            type: 'post',
            success: function (res) {
                if (res.status == true) {
                $('#success_tic').modal('toggle');
                }
            }
        })
    })
</script>

<div id="success_tic" class="modal fade" role="dialog">
    <div class="modal-dialog">
<div class="modal-content">
            <a class="close" href="#" data-dismiss="modal">&times;</a>
            <div class="page-body">
                <div class="head">
                    <h3 style="margin-top:5px;">Thanh toán thành công!</h3>
                    <h4>Cảm ơn vì đơn hàng của bạn </h4>
                </div>

                <h1 style="text-align:center;">
                    <div class="checkmark-circle">
                        <div class="background"></div>
                        <div class="checkmark draw"></div>
                    </div>
                    <a href="/product" class="site-btn">Tiếp tục mua sắp</a>
                </h1>
            </div>
        </div>
    </div>
</div>
<style>
     #success_tic .page-body{
  max-width:300px;
  background-color:#FFFFFF;
  margin:10% auto;
}
 #success_tic .page-body .head{
  text-align:center;
}
/* #success_tic .tic{
  font-size:186px;
} */
#success_tic .close{
      opacity: 1;
    position: absolute;
    right: 0px;
    font-size: 30px;
    padding: 3px 15px;
  margin-bottom: 10px;
}
#success_tic .checkmark-circle {
  width: 150px;
  height: 150px;
  position: relative;
  display: inline-block;
  vertical-align: top;
}
.checkmark-circle .background {
  width: 150px;
  height: 150px;
  border-radius: 50%;
  background: #1ab394;
  position: absolute;
}
#success_tic .checkmark-circle .checkmark {
  border-radius: 5px;
}
#success_tic .checkmark-circle .checkmark.draw:after {
  -webkit-animation-delay: 300ms;
  -moz-animation-delay: 300ms;
  animation-delay: 300ms;
  -webkit-animation-duration: 1s;
  -moz-animation-duration: 1s;
  animation-duration: 1s;
  -webkit-animation-timing-function: ease;
  -moz-animation-timing-function: ease;
  animation-timing-function: ease;
  -webkit-animation-name: checkmark;
  -moz-animation-name: checkmark;
  animation-name: checkmark;
  -webkit-transform: scaleX(-1) rotate(135deg);
  -moz-transform: scaleX(-1) rotate(135deg);
  -ms-transform: scaleX(-1) rotate(135deg);
  -o-transform: scaleX(-1) rotate(135deg);
  transform: scaleX(-1) rotate(135deg);
  -webkit-animation-fill-mode: forwards;
  -moz-animation-fill-mode: forwards;
  animation-fill-mode: forwards;
}
#success_tic .checkmark-circle .checkmark:after {
  opacity: 1;
  height: 75px;
  width: 37.5px;
  -webkit-transform-origin: left top;
  -moz-transform-origin: left top;
  -ms-transform-origin: left top;
  -o-transform-origin: left top;
  transform-origin: left top;
  border-right: 15px solid #fff;
  border-top: 15px solid #fff;
  border-radius: 2.5px !important;
  content: '';
  left: 35px;
  top: 80px;
  position: absolute;
}

@@-webkit-keyframes checkmark {
  0% {
    height: 0;
    width: 0;
    opacity: 1;
  }
  20% {
    height: 0;
    width: 37.5px;
    opacity: 1;
  }
  40% {
    height: 75px;
    width: 37.5px;
    opacity: 1;
  }
  100% {
    height: 75px;
    width: 37.5px;
    opacity: 1;
  }
}
@@-moz-keyframes checkmark {
  0% {
    height: 0;
    width: 0;
    opacity: 1;
  }
  20% {
    height: 0;
    width: 37.5px;
    opacity: 1;
  }
  40% {
    height: 75px;
    width: 37.5px;
    opacity: 1;
  }
  100% {
    height: 75px;
    width: 37.5px;
    opacity: 1;
  }
}
@@keyframes checkmark {
  0% {
    height: 0;
    width: 0;
    opacity: 1;
  }
  20% {
    height: 0;
    width: 37.5px;
    opacity: 1;
  }
  40% {
    height: 75px;
    width: 37.5px;
    opacity: 1;
  }
  100% {
    height: 75px;
    width: 37.5px;
    opacity: 1;
  }
}
</style>